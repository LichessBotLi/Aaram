name: Aba

on:
  schedule:
    - cron: "51 8 * * *"
  workflow_dispatch:
    inputs:
      team_id:
        description: "Lichess team ID (default: chess-blasters-2)"
        required: false
        default: "chess-blasters-2"
      lichess_key:
        description: "Lichess API key (default: S uses secret, empty uses LICHESS_KEY)"
        required: false
        default: "S"

permissions:
  actions: write
  contents: read

jobs:
  leave-swiss:
    runs-on: ubuntu-latest
    timeout-minutes: 300  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Install GitHub CLI
        run: |
          if ! command -v gh &>/dev/null; then
            echo "Installing GitHub CLI..."
            sudo apt-get update -y
            sudo apt-get install -y gh
          else
            echo "GitHub CLI already installed."
          fi

      - name: Cancel any previous active workflows
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "──────────────────────────────"
          echo "Checking for previous active workflows..."
          CURRENT_RUN_ID=${{ github.run_id }}

          RUNS=$(gh run list --workflow "Aba" --status in_progress --json databaseId --jq ".[].databaseId" | grep -v "^$" | grep -v "$CURRENT_RUN_ID" || true)

          if [ -n "$RUNS" ]; then
            echo "Found previous active workflow(s):"
            echo "$RUNS"
            for RUN_ID in $RUNS; do
              echo "Cancelling workflow $RUN_ID..."
              gh run cancel "$RUN_ID" || echo "⚠️ Failed to cancel $RUN_ID (may be permission or timing issue)"
            done
          else
            echo "No previous active workflows found."
          fi
          echo "──────────────────────────────"

      - name: Run Swiss join/withdraw script
        env:
          TEAM_ID: ${{ github.event.inputs.team_id || 'chess-blasters-2' }}
          # Lichess key logic:
          # - If input is "S" (default) → use secret
          # - If input is empty/removed → use env LICHESS_KEY
          # - Else → use input value
          LICHESS_KEY: ${{ github.event.inputs.lichess_key == 'S' && secrets.LICHESS_KEYS || github.event.inputs.lichess_key || env.LICHESS_KEY }}
        run: |
          echo "──────────────────────────────"
          echo "Running Swiss join/withdraw script..."
          python3 -u ja.py
          echo "──────────────────────────────"
          echo "✅ Script finished successfully."
