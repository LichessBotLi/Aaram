name: Abab

on:
  schedule:
    - cron: "0 * * * *" 
  workflow_dispatch:
    inputs:
      team_id:
        description: "Lichess team ID (default: chess-blasters-2)"
        required: false
        default: "chess-blasters-2"

jobs:
  manage-swiss:
    runs-on: ubuntu-latest
    timeout-minutes: 300  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests
      - name: Install GitHub CLI        
        run: |        
          type -p gh || (curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg &&        
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg &&        
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null &&        
          sudo apt update && sudo apt install gh -y)        

      - name: Cancel any previous active workflows        
        run: |        
          echo "Checking for previous active workflows..."        
          CURRENT_RUN_ID=${{ github.run_id }}        

          RUNS=$(gh run list --workflow "Abab" --status in_progress --json databaseId --jq ".[].databaseId" | grep -v "^$" | grep -v "$CURRENT_RUN_ID" || true)        

          if [ -n "$RUNS" ]; then        
            echo "Found previous active workflow(s): $RUNS"        
            for RUN_ID in $RUNS; do        
              echo "Cancelling workflow $RUN_ID..."        
              gh run cancel "$RUN_ID"        
            done        
          else        
            echo "No previous active workflows found."        
          fi        
      - name: Run Swiss join/withdraw
        env:
          TEAM_ID: ${{ github.event.inputs.team_id || 'chess-blasters-2' }}
          LICHESS_KEY: ${{ secrets.LICHESS_KEY }}
        run: python -u jw.py
